---
title: "Understanding issues"
jupyter: python3
# TODO: eval when implemented
eval: false
---

## The `Issue` class

One `Issue` corresponds to one failed check on one field in the
descriptor. An `Issue` has three attributes:

-   `type`: The type of the check that failed and caused the issue. This
    can be a type that exists in the Data Package standard (e.g.,
    `required` or `pattern`) or a custom type.
-   `jsonpath`: The [JSON path](https://en.wikipedia.org/wiki/JSONPath)
    of the field that failed the check. For example,
    `$.resources[2].name`.
-   `message`: An explanation of what went wrong.

## The `explain()` function

The `explain()` function provides a more verbose and user-friendly
description of a list of `Issue`s. To use it, pass it the issues output
by `check()`:

```{python}
import check_datapackage as cdp

package_descriptor = {
    "name": 123,
    "title": "Hibernation Physiology of the Woolly Dormouse: A Scoping Review.",
    "id": "123-abc-123",
    "created": "2014-05-14T05:00:01+00:00",
    "version": "1.0.0",
    "licenses": [{"name": "odc-pddl"}],
}

issues = cdp.check(descriptor=package_descriptor)
print(cdp.explain(issues))
```

When setting `error=True` in `check()`, error messages will be generated
by the `explain()` function.
