---
title: "Understanding issues"
jupyter: python3
order: 2
---

## The `Issue` class

One `Issue` corresponds to one failed check on one field in the
properties. An `Issue` has attributes that provide information about the
failed check, which are described in more detail in the
[`Issue`](/docs/reference/Issue.qmd) documentation.

## The `explain()` function

::: callout-important
This function has not yet been implemented, though this section
describes how it will work when it is available. See the
[interface](/docs/design/interface.qmd) documentation for more details
about it.
:::

The `explain()` function provides a more verbose and user-friendly
description of a list of `Issue`s. If you had a package properties that
looked like the below:

```{python}
import check_datapackage as cdp
cdp.example_package_properties()
```

You can use input the issues found using `check()` into `explain()` to
get a more human-friendly version of the problems:

```{python}
#| eval: false
# Remove a required field to generate an issue
package_properties = cdp.example_package_properties()
del package_properties["resources"]

issues = cdp.check(properties=package_properties)
cdp.explain(issues)
```

When setting `error=True` in `check()`, error messages will be generated
by the `explain()` function.
