---
title: "Design"
---

The purpose of these design documents is to describe the design of
`check-datapackage` in enough detail to guide a sustainable
implementation (i.e., maintainable in the long term) and to ensure that
the team has a shared understanding of the package's scope and
architecture before starting the development.

`check-datapackage`'s design builds off of our overall Seedcase [design
principles and patterns](https://design.seedcase-project.org/), and
strongly follows the same design principles and patterns described
there.

## Purpose

The overall aim of `check-datapackage` is to check the compliance of
[Data Package
descriptors](https://datapackage.org/standard/glossary/#descriptor)
(i.e., the contents of `datapackage.json`) against the [Data Package
standard](https://datapackage.org/).

Specifically, `check-datapackage` should:

1.  Check that the structure and contents of Data Package descriptors
    match the specification.
2.  Provide simple, user-friendly feedback about mismatches.

## Requirements

Overall, `check-datapackage` must:

-   Check Data Package descriptors against the Data Package standard,
    specifically the Data Package
    [profiles](https://datapackage.org/standard/glossary/#profile).
-   Allow configuration to check or not check certain components of the
    descriptor.
-   Support turning off specific checks defined in the standard.
-   Support custom, user-defined checks in addition to those in the
    standard.
-   Provide clear, user-friendly, and structured messages about any
    issues, identifying where in the descriptor the issues occur.
-   Provide a strict mode that enforces all aspects of the Data Package
    standard, including properties that should be included but aren't
    required.
-   Be designed in a way that can be extended as a command-line
    interface (CLI) in the future.

In general, `check-datapackage` will not:

-   Depend on other Seedcase packages.
-   Check resource data against its descriptor.
